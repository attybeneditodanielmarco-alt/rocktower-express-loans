{
  "name": "rocktower-express-loans",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.21.1",
    "lucide-react": "^0.298.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Rock Tower Express Loans</title>
  </head>
  <body class="bg-black text-white">
    <div id="root"></div>
  </body>
</html>
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
import { useState } from "react";
import { BrowserRouter as Router, Routes, Route, Link, Navigate } from "react-router-dom";
import { Menu, X } from "lucide-react";

// Fake authentication
const useAuth = () => {
  const [user, setUser] = useState(null);
  return {
    user,
    login: (email) => setUser({ email, loans: [{ id: 1, amount: 5000, status: "Active" }] }),
    logout: () => setUser(null),
    signup: (email) => setUser({ email, loans: [] })
  };
};

function Navbar({ auth }) {
  const [open, setOpen] = useState(false);
  return (
    <nav className="bg-black text-white px-4 py-3 flex justify-between items-center sticky top-0 z-50">
      <Link to="/" className="text-lg font-bold">Rock Tower Loans</Link>
      <button className="sm:hidden" onClick={() => setOpen(!open)}>
        {open ? <X size={24} /> : <Menu size={24} />}
      </button>
      <div className={`${open ? "flex flex-col absolute top-14 left-0 w-full bg-black p-4" : "hidden"} sm:flex gap-4`}>
        <Link to="/" onClick={() => setOpen(false)}>Home</Link>
        {!auth.user && <Link to="/login" onClick={() => setOpen(false)}>Login</Link>}
        {!auth.user && <Link to="/signup" onClick={() => setOpen(false)}>Sign Up</Link>}
        {auth.user && <Link to="/dashboard" onClick={() => setOpen(false)}>Dashboard</Link>}
      </div>
    </nav>
  );
}

function Landing() {
  return (
    <div className="p-8 text-center min-h-screen bg-black text-white flex flex-col justify-center items-center">
      <h1 className="text-4xl font-bold mb-4">Rock Tower Express Loans</h1>
      <p className="text-lg mb-6 text-gray-300">Fast. Reliable. Transparent loans when you need them.</p>
      <Link to="/login"><button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">Get Started</button></Link>
    </div>
  );
}

function Login({ auth }) {
  const [email, setEmail] = useState("");
  if (auth.user) return <Navigate to="/dashboard" />;
  return (
    <div className="p-6 max-w-md mx-auto bg-gray-900 text-white rounded mt-10">
      <h2 className="text-xl mb-4">Login</h2>
      <input type="email" placeholder="Email" className="w-full p-2 mb-4 rounded bg-gray-800"
        value={email} onChange={(e) => setEmail(e.target.value)} />
      <button onClick={() => auth.login(email)} className="w-full bg-blue-600 py-2 rounded">Login</button>
    </div>
  );
}

function Signup({ auth }) {
  const [email, setEmail] = useState("");
  if (auth.user) return <Navigate to="/dashboard" />;
  return (
    <div className="p-6 max-w-md mx-auto bg-gray-900 text-white rounded mt-10">
      <h2 className="text-xl mb-4">Sign Up</h2>
      <input type="email" placeholder="Email" className="w-full p-2 mb-4 rounded bg-gray-800"
        value={email} onChange={(e) => setEmail(e.target.value)} />
      <button onClick={() => auth.signup(email)} className="w-full bg-green-600 py-2 rounded">Sign Up</button>
    </div>
  );
}

function Dashboard({ auth }) {
  if (!auth.user) return <Navigate to="/login" />;
  return (
    <div className="p-6 max-w-lg mx-auto bg-gray-900 text-white rounded mt-10">
      <h2 className="text-xl mb-4">Welcome, {auth.user.email}</h2>
      <h3 className="mb-2">Your Loans:</h3>
      {auth.user.loans.length === 0 ? (
        <p>No loans yet.</p>
      ) : (
        <ul>
          {auth.user.loans.map((loan) => (
            <li key={loan.id} className="p-2 mb-2 bg-gray-800 rounded">
              Loan #{loan.id}: ${loan.amount} - {loan.status}
            </li>
          ))}
        </ul>
      )}
      <button onClick={auth.logout} className="mt-4 bg-red-600 px-4 py-2 rounded">Logout</button>
    </div>
  );
}

export default function App() {
  const auth = useAuth();
  return (
    <Router>
      <Navbar auth={auth} />
      <Routes>
        <Route path="/" element={<Landing />} />
        <Route path="/login" element={<Login auth={auth} />} />
        <Route path="/signup" element={<Signup auth={auth} />} />
        <Route path="/dashboard" element={<Dashboard auth={auth} />} />
      </Routes>
    </Router>
  );
}
